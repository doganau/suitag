version: '3.8'

services:
  # Analytics Backend
  analytics-backend:
    build:
      context: .
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/linktree_analytics
      - REDIS_URL=redis://redis:6379
      - SUI_NETWORK=testnet
      - SUI_RPC_URL=https://fullnode.testnet.sui.io:443
      - PACKAGE_ID=0xc5439e27cc0f5d4e63f410c8d3972bab712fdd2fd235540f9eb0148566dfc6fb
      - REGISTRY_ID=0xa619412963d391576358f631a35c7724c8614fd6ca596023f5c8461853f313e9
      - ANALYTICS_CACHE_TTL=3600
      - REALTIME_ENABLED=true
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - CORS_ORIGIN=http://localhost:5173,https://outlierchain.trwal.app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=linktree_analytics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - analytics-backend
    restart: unless-stopped
    profiles:
      - with-nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: linktree-analytics
    driver: bridge
